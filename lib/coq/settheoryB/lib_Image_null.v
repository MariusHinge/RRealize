(* This file is generated by Why3's Coq driver *)
(* Beware! Only edit allowed sections below    *)
Require Import BuiltIn.
Require BuiltIn.
Require HighOrd.
Require set.Set.
Require map.Map.
Require map.Const.

(* Why3 assumption *)
Definition rel (a:Type) (b:Type) := (a* b)%type -> bool.

Parameter image:
  forall {a:Type} {a_WT:WhyType a} {b:Type} {b_WT:WhyType b},
  ((a* b)%type -> bool) -> (a -> bool) -> b -> bool.

Axiom mem_image :
  forall {a:Type} {a_WT:WhyType a} {b:Type} {b_WT:WhyType b},
  forall (r:(a* b)%type -> bool) (dom:a -> bool) (y:b),
  (set.Set.mem y (image r dom)) <->
  exists x:a, (set.Set.mem x dom) /\ (set.Set.mem (x, y) r).

Axiom image_union :
  forall {a:Type} {a_WT:WhyType a} {b:Type} {b_WT:WhyType b},
  forall (r:(a* b)%type -> bool) (s:a -> bool) (t:a -> bool),
  ((image r (set.Set.union s t)) = (set.Set.union (image r s) (image r t))).

Axiom image_add :
  forall {a:Type} {a_WT:WhyType a} {b:Type} {b_WT:WhyType b},
  forall (r:(a* b)%type -> bool) (dom:a -> bool) (x:a),
  ((image r (map.Map.set dom x true)) =
   (set.Set.union
    (image r (map.Map.set (map.Const.const false : a -> bool) x true))
    (image r dom))).

