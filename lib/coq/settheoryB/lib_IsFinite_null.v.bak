(* This file is generated by Why3's Coq driver *)
(* Beware! Only edit allowed sections below    *)
Require Import BuiltIn.
Require BuiltIn.
Require HighOrd.
Require int.Int.
Require set.Set.
Require map.Map.
Require map.Const.

(* Why3 assumption *)
Inductive is_finite_subset {a:Type} {a_WT:WhyType a}: (a -> bool) ->
  (a -> bool) -> Prop :=
  | Empty :
      forall (s:a -> bool),
      is_finite_subset (map.Const.const false : a -> bool) s
  | Add :
      forall (x:a) (s1:a -> bool) (s2:a -> bool), (is_finite_subset s1 s2) ->
      is_finite_subset (map.Map.set s1 x true) s2.

Parameter integer: Z -> bool.

Axiom mem_integer : forall (x:Z), set.Set.mem x integer.

Parameter natural: Z -> bool.

Axiom mem_natural : forall (x:Z), (set.Set.mem x natural) <-> (0%Z <= x)%Z.

Parameter mk: Z -> Z -> Z -> bool.

Axiom mem_interval :
  forall (x:Z) (a:Z) (b:Z),
  (set.Set.mem x (mk a b)) <-> ((a <= x)%Z /\ (x <= b)%Z).

Axiom interval_empty :
  forall (a:Z) (b:Z), (b < a)%Z ->
  ((mk a b) = (map.Const.const false : Z -> bool)).

Axiom interval_add :
  forall (a:Z) (b:Z), (a <= b)%Z ->
  ((mk a b) = (map.Map.set (mk a (b - 1%Z)%Z) b true)).

Axiom finite_interval :
  forall (a:Z) (b:Z), is_finite_subset (mk a b) integer.

Parameter finite_subsets:
  forall {a:Type} {a_WT:WhyType a}, (a -> bool) -> (a -> bool) -> bool.

Axiom finite_Empty :
  forall {a:Type} {a_WT:WhyType a},
  forall (s:a -> bool),
  set.Set.mem (map.Const.const false : a -> bool) (finite_subsets s).

Axiom finite_Add :
  forall {a:Type} {a_WT:WhyType a},
  forall (x:a) (s1:a -> bool) (s2:a -> bool),
  (set.Set.mem s1 (finite_subsets s2)) ->
  set.Set.mem (map.Map.set s1 x true) (finite_subsets s2).

Axiom finite_inversion :
  forall {a:Type} {a_WT:WhyType a},
  forall (s1:a -> bool) (s2:a -> bool),
  (set.Set.mem s1 (finite_subsets s2)) ->
  (set.Set.infix_eqeq s1 (map.Const.const false : a -> bool)) \/
  exists x:a, exists s3:a -> bool,
  (set.Set.infix_eqeq s1 (map.Map.set s3 x true)) /\
  (set.Set.mem s3 (finite_subsets s2)).

