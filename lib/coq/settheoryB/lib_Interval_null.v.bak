(* This file is generated by Why3's Coq driver *)
(* Beware! Only edit allowed sections below    *)
Require Import BuiltIn.
Require BuiltIn.
Require HighOrd.
Require int.Int.
Require set.Set.
Require map.Map.
Require map.Const.

Parameter integer: Z -> bool.

Axiom mem_integer : forall (x:Z), set.Set.mem x integer.

Parameter natural: Z -> bool.

Axiom mem_natural : forall (x:Z), (set.Set.mem x natural) <-> (0%Z <= x)%Z.

Parameter mk: Z -> Z -> Z -> bool.

Axiom mem_interval :
  forall (x:Z) (a:Z) (b:Z),
  (set.Set.mem x (mk a b)) <-> ((a <= x)%Z /\ (x <= b)%Z).

Axiom interval_empty :
  forall (a:Z) (b:Z), (b < a)%Z ->
  ((mk a b) = (map.Const.const false : Z -> bool)).

Axiom interval_add :
  forall (a:Z) (b:Z), (a <= b)%Z ->
  ((mk a b) = (map.Map.set (mk a (b - 1%Z)%Z) b true)).

